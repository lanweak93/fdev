############ save file path ################
# \u5BB9\u5668\u672C\u5730\u5B58\u50A8\u76EE\u5F55
gitlab.fileDir=/ebank/devops/
gitlib.fdev-ci-template.branch=master

###########  mongodb config  ##########
spring.data.mongodb.uri=

######### redis config ###################
spring.redis.timeout=6000ms
spring.redis.cluster.nodes=
spring.redis.password=
spring.redis.lettuce.pool.min-idle=5
spring.redis.lettuce.pool.max-idle=20
spring.redis.lettuce.pool.max-active=100
spring.redis.lettuce.pool.max-wait=-1
redisCacheEnable=true

############ \u8C03\u7528\u7B2C\u4E09\u65B9 \u63A5\u53E3 api \u524D\u7F00 ############
task.api = 
user.api = 
interface.api = 
envconfig.api = 

############ transaction code config##############
fdev.task.domain=
fdev.interface.domain=
fdev.user.domain=
fdev.envconfig.domain=
fdev.release.domain=
fdev.tmantis.domain=
fdev.notify.domain=
fdev.component.domain=
fdev.database.domain=

############ filter url config ##############
userManager.url=
no.filter.urls=/api/gitlabapi/webHook;/actuator
no.filter.response.urls=/fuser/api/user/query;/fuser/api/user/queryUserCoreData;/fapp/api/app/findbyid

########### gitlab config #################
webhook.url=
webhook=

###################Sonar config#########################
getProjectInfo=bugs,vulnerabilities,code_smells,duplicated_lines_density,coverage,ncloc_language_distribution,ncloc,security_rating,reliability_rating,sqale_rating
metricKey=bugs,vulnerabilities,code_smells,duplicated_lines_density,coverage
sonar.api=

########### release node config ################
release.mergedCallBack=

########### file Resources config ############
gitlab.fileResources=
gitlab.resource.Path=
gitlab.filePath=
gitlab.resource.filepath=
gitlib.path=
gitlib.fdev-ci-template.id=1659
gitlab.groupPath=

#超级帐号token
gitlab.token=
gitlab.name=fdev
gitlab.password=
gitlab.userid=2778

############authority manager config###########
auth-Manager=
env-Manager=

//tomcat upload
spring.servlet.multipart.max-file-size=256MB
spring.servlet.multipart.max-request-size=256MB

# archetype
archetypeGitlabciMapping=online:online,web:web,WEB:web,vue:mobcli-vue,job:online
#持续集成相关文件,如果有多个用","隔开
continuous.intergration.file=.gitlab-ci.yml,ci
#新增应用拷贝ingore文件
continuous.ignore=ignore
#新增应用时直接复制持续集成项目,如果有多个用","隔开
continuous.except=mobcli-vue

# 卡点接口
userStuckPoint.url=
# 卡点管理员 
userStuckPoint.RoleId=

###########     sonar.json    ##########
dsonar.host=
dsonar.scm.provider=git
dsonar.login=
sonar.image.name=
sonar.switch=true
fdev.env=PRO

###########    kafka config   ##########
spring.sleuth.messaging.kafka.enabled = false
spring.kafka.bootstrap-servers=
kafka.topic=super-runner-pro
#删除/废弃应用的时候发kafka消息的topic
delete.app.topic=delete-app-pro

##########     vip channel    ##############
kafka.send.topic=super-runner-docker-pro
kafka.runner.topic=super-runner-writer-docker-pro

###########    minio config   ##############
minio.accessKey=Minio
minio.secretKey=

###########    cron config  ##################
###定时清理超时的pipeline，每分钟定时执行一次
clear.pipeline.cron=0 */1 * * * ? 

######## 调用api token #######
access_token_list=
system_name_list=RASP,safe

auth.jwt.token.secret=

#PRO 
fdev.user.groups=

fdev.app.names=
