###########      monogodb    ##########
spring.data.mongodb.uri=
logging.level.org.springframework.data.mongodb.core.MongoTemplate: INFO

###########       GitLab      ##########
git.clone.user=fdev
git.clone.password=
git.api.url=
git.token=
gitlab.manager.token=
gitlab.api.url=

###########       调用其他模块交易      ##########
#用户管理模块认证地址
userManager.url=
fdev.service.domain=
fdev.usermanage.domain=
fdev.demandmanage.domain=
fdev.tasknew.domain=
fdev.docmanage.domain=
fdev.torder.domain=
fdev.fblue.domain=


###########          卡点管理员             ########################
userStuckPoint.url=
userStuckPoint.RoleId=

###########       redis      ##########
spring.redis.timeout=6000ms
spring.redis.cluster.nodes=
spring.redis.password=
spring.redis.lettuce.pool.min-idle=5
spring.redis.lettuce.pool.max-idle=20
spring.redis.lettuce.pool.max-active=100
spring.redis.lettuce.pool.max-wait=-1

redisCacheEnable=true

###########       minio      ##########
# excel模板minio根路径
excel.template.minio.url=/excel-template-pro/
# 投产需求文件minio地址
release.rqrmnt.minio.url=/release-rqrmnt-pro/
docmanage.file.url=
demand.file.minio.uri=

#ipmp服务启地址
#sit
#pro后台未上pro环境
ipmp.url=


###########       jfrog Artifactory     ##########
#JFROG制品库配置
fdev.publish.artifactory=
fdev.publish.artifactoryFlie=
fdev.publish.artifactoryFile=
fdev.publish.artifactory.user=spdb-fdev
fdev.publish.artifactory.pwd=

#获取制品库token配置
fdev.publish.artifactory.token=
fdev.publish.artifactory.token.user=spdb-fdev-reader
fdev.publish.artifactory.token.pwd=
fdev.publish.artifactory.token.groups=*

JFROG制品库敏态配置
fdev.publish.artifactory.docker=
fdev.publish.artifactory.generic.prd=fdev-generic-zh-0748-prd-local/
fdev.publish.artifactory.docker.prd=fdev-docker-zh-0748-prd-local/
fdev.publish.artifactory.user.copy=fdev-user

#介质服务器信息
auto.media.server.host=
auto.media.server.user=devops
auto.media.server.pwd=
auto.media.server.dir=/devops
#自动化发布脚本目录
scripts.path=/fdev/scripts/

###########       aoms     ##########
# aoms对接url
fdev.publish.aomsurl=
#aoms生产对接url
fdev.publish.aoms.proc.url=
# aoms对应环境映射0-开发投产验证环境,1-生产环境
fdev.publish.aomsurl.envname=0
#aoms统一登录账号
aoms.media.username=fdev

#AOMS连接超时时间
auto.connection.deafult.timeout=120000
#AOMS读超时时间
auto.read.deafult.timeout=120000

#跳过token验证
no.filter.urls=/actuator

###########  kafka config   #########
spring.sleuth.messaging.kafka.enabled = false
# 配对应环境的kafka
spring.kafka.bootstrap-servers=
topicName=merge-pro
groupId=fdev-release


# 镜像推送与介质准备配置
fdev.media.topic=super-runner-docker-pro
fdev.release.branch=publish-master
fdev.release.gitHttpUrl=
fdev.release.projectName=fdev-release-pythonscripts
fdev.release.releaseImageName=
link.port=8080

task.file.resource=fdev-resources

# 网银网段fdev与自动化发布环境映射关系（生产）
fdev.autorelease.dmz.env.product.mapping={"rel1-dmz":"DEV","tcyz-test":"TEST","sh-k1-dmz":"PROCSH","hf-k1-dmz":"PROCHF"}
# 网银网段fdev与自动化发布环境映射关系（灰度）
fdev.autorelease.dmz.env.gray.mapping={"rel1-dmz":"DEV","tcyz-test":"TEST","sh-k1-dmz-gray":"PROCSH","hf-k1-dmz-gray":"PROCHF"}
# 业务网段fdev与自动化发布环境映射关系（生产）
fdev.autorelease.biz.env.product.mapping={"rel1-biz":"DEV","tcyz-test":"TEST","sh-k1-biz":"PROCSH","hf-k1-biz":"PROCHF"}
# 业务网段fdev与自动化发布环境映射关系（灰度）
fdev.autorelease.biz.env.gray.mapping={"rel1-biz":"DEV","tcyz-test":"TEST","sh-k1-biz-gray":"PROCSH","hf-k1-biz-gray":"PROCHF"}

# commonfig目录与环境映射
#commonfig.gray.env.dir={"DEV": ["rel1-dmz","rel1-biz"], "TEST": ["tcyz-test"], "PROCSH": ["sh-k1-dmz-gray", "sh-k1-biz-gray"], "PROCHF": ["hf-k1-dmz-gray", "hf-k1-biz-gray"]}
#commonfig.proc.env.dir={"DEV": ["rel1-dmz","rel1-biz"], "TEST": ["tcyz-test"], "PROCSH": ["sh-k1-dmz", "sh-k1-biz"], "PROCHF": ["hf-k1-dmz", "hf-k1-biz"]}
commonfig.gray.env.dir={"DEV": ["caas-rel1-dmz","caas-rel1-biz"], "TEST": ["caas-tcyztest-dmz"], "PROCSH": ["sh-k1-dmz-gray", "sh-k1-biz-gray"], "PROCHF": ["hf-k1-dmz-gray", "hf-k1-biz-gray"]}
commonfig.proc.env.dir={"DEV": ["caas-rel1-dmz","caas-rel1-biz"], "TEST": ["caas-tcyztest-dmz"], "PROCSH": ["sh-k1-dmz", "sh-k1-biz"], "PROCHF": ["hf-k1-dmz", "hf-k1-biz"]}

# 介质目录可选项
prod.dir=docker,docker_all,docker_stopall,docker_startall,docker_restart,docker_yaml

#权限验证开关，true为开启
fdev.role.control.enabled=true

#邮件发送开关，true为开启
fdev.email.control.enabled=true
req.long.message.log.switch=false
link.port=8080


# 系统内部错误消息通知人员以“|”隔开
notice.managers=

#投产管理员角色
publish.manager=

management.endpoints.web.exposure.include=health,info,prometheus,bus-refresh

#上传投产需求文件本地仓库目录
upload.local.rqrmntdir=/fdev/ebank/rqrmnt/
# excel本地模板保存地址
excel.local.dir=/fdev/ebank/excel/
# 介质本地保存地址
media.local.dir=/fdev/ebank/media/

#fdev-common 升级新增
auth.jwt.token.secret=
userManager.user.url=

#文件热加载
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
