spring.application.name=fcipipeline
server.servlet.context-path=/fcipipeline

###########  mongodb config   ##########
spring.data.mongodb.uri=

###########    kafka config   ##########
spring.sleuth.messaging.kafka.enabled = false
spring.kafka.bootstrap-servers=

###########   redis config    ##########

spring.redis.timeout=6000ms
spring.redis.cluster.nodes=
spring.redis.password=
spring.redis.lettuce.pool.min-idle=5
spring.redis.lettuce.pool.max-idle=20
spring.redis.lettuce.pool.max-active=100
spring.redis.lettuce.pool.max-wait=-1
redisCacheEnable=true

#######  checkUser url config  #######
userManager.url=
auth.jwt.token.secret=
userManager.user.url=


##########      api config    ##########
fdev.app.domain=
fdev.envconfig.domain=
fdev.fuser.domain=
fdev.domain=
fdev.notify.domain=


gitlab.url=
#超级管理员
gitlab.token=
git_back_Url=

minio.endpoint=
minio.firstKey=Minio
minio.secondKey=
mioBuket=fdev-ci-plugins

no.filter.urls=/api/v4;/actuator

gitlab.manager.username=fdev
gitlab.manager.password=

gitlab.api.url=
gitlab.manager.token=

pushTopicName=push-pro
tagPushTopicName=tag-push-pro
pushGroupId=fdev-ci-pipeline
tagPushGroupId=fdev-ci-pipeline

#模版
pipelineTemplate.white.list=

#小组管理员id
group.role.admin.id=

jfrog.username=spdb-fdev
jfrog.password=

#文件存储有效相对路径
relPluginRelativeRootUrl=/fdev-ci-pipeline-data/upload/plugin/
#文件存储临时相对路径
temPoraryRelativeRootUrl=/fdev-ci-pipeline-data/temporary/plugin/
#nas盘映射到容器加一层应用运行所在环境 (sit rel pro)
envUrl=/master

#文件上传后缀
uploadfile.suffix.list=.xml,.yaml
#文件上传文件名
uploadfile.name.list=Dockerfile

#需要传env给插件入参的插件集合,map的key为插件英文名:value为参数的key值（list）
env.plugin.map={'pythonDocker':{'ci_dockerservice'}}

#fdev-common 1.2.4
auth.jwt.token.secret=
