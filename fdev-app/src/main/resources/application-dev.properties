############ save file path ################
#持续集成本地临时存放文件路径
gitlab.fileDir=/ebank/devops/
#持续集成项目选择分支
gitlib.fdev-ci-template.branch=sit

###########  mongodb config  ##########
spring.data.mongodb.uri=mongodb://10.141.59.84:8897,10.141.59.85:8897,10.141.59.86:8897/fdev-app_sit

######### redis config ###################
spring.redis.timeout=6000ms
spring.redis.cluster.nodes=10.141.59.84:9381,10.141.59.84:9382,10.141.59.85:9381,10.141.59.85:9382,10.141.59.86:9381,10.141.59.86:9382
#spring.redis.cluster.nodes=10.141.59.88:9379,10.141.59.88:9380,10.141.59.89:9379,10.141.59.89:9380,10.141.59.90:9379,10.141.59.90:9380
spring.redis.password=spdb1234
spring.redis.lettuce.pool.min-idle=5
spring.redis.lettuce.pool.max-idle=20
spring.redis.lettuce.pool.max-active=100
spring.redis.lettuce.pool.max-wait=-1
redisCacheEnable=true

############### kafka config ################
spring.sleuth.messaging.kafka.enabled = false
spring.kafka.bootstrap-servers=10.141.59.84:9092,10.141.59.85:9092,10.141.59.86:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.send.topic=super-runner-docker-sit
kafka.runner.topic=super-runner-writer-docker-sit
#rel环境
#kafka.send.topic=super-runner-docker-rel
#kafka.runner.topic=super-runner-writer-docker-rel
#pro环境
#kafka.send.topic=super-runner-docker-pro
#kafka.runner.topic=super-runner-writer-docker-pro
#删除/废弃应用的时候发kafka消息的topic
delete.app.topic=delete-app-sit
#rel : delete-app-rel
#pro : delete-app-pro


############ 调用第三方 接口 api 前缀 ############
# task 模块的前缀
task.api = http://10.134.13.25:9093/ftask/api
user.api = http://10.134.13.25:9093/fuser/api
interface.api = http://10.134.13.25:9093/finterface/api
envconfig.api= http://10.134.13.25:9093/fenvconfig/api

fdev.task.domain=http://10.134.13.25:9093
fdev.interface.domain=http://10.134.13.25:9093
fdev.user.domain=http://10.134.13.25:9093
fdev.envconfig.domain=http://10.134.13.25:9093
fdev.release.domain=http://10.134.13.25:9093
fdev.tmantis.domain=http://10.134.13.25:9093
fdev.component.domain=http://10.134.13.25:9093
fdev.notify.domain=http://10.134.13.25:9093
fdev.database.domain=http://10.134.13.25:9093


############ filter url config ##############
userManager.url=http://10.134.13.25:9093/fuser/api/auth/checkUser
no.filter.urls=/api/gitlabapi/webHook;/actuator
no.filter.response.urls=/fuser/api/user/query;/fuser/api/user/queryUserCoreData;/fapp/api/app/findbyid

########### gitlab config #################
webhook.url=http://10.134.13.25:9093/fapp/api/gitlabapi/webHook
webhook=http://10.134.13.25:9093/fwebhook/api/webHook

########### release node config ################
release.mergedCallBack=http://10.134.13.25:9093/frelease/api/devops/mergedCallBack

########### file Resources config ############
gitlab.fileResources=http://10.141.59.87:8090/ebank/devops/fdev-resources-test.git
gitlab.resource.Path=http://10.141.59.87:8090/api/v4/projects/4/repository/tree
gitlab.filePath=http://10.141.59.87:8090/api/v4/projects/4/repository/files/
gitlab.resource.filepath=http://10.141.59.87:8090/ebank/devops/fdev-resources-test/blob/master
gitlib.path=http://10.141.59.87:8090/api/v4/
gitlab.groupPath=http://10.141.59.87:8090/ebank/devops
#持续集成项目id
gitlib.fdev-ci-template.id=3
#超级帐号token
gitlab.token=7rVtMxxukpsGW76em6F7
gitlab.name=fdev
gitlab.password=2020fdev
gitlab.userid=51


############authority manager config###########
auth-Manager=5cb72f1d9b1dd800076b4ad1,5c41796ca3178a3eb4b52007
env-Manager=5d72123ca68d0e00099d222e

###################Sonar config#########################
getProjectInfo=bugs,vulnerabilities,code_smells,duplicated_lines_density,coverage,ncloc_language_distribution,ncloc,security_rating,reliability_rating,sqale_rating
metricKey=bugs,vulnerabilities,code_smells,duplicated_lines_density,coverage
sonar.api=http://10.134.13.25:9000/api/

//tomcat upload
spring.servlet.multipart.max-file-size=256MB
spring.servlet.multipart.max-request-size=256MB
# archetype
archetypeGitlabciMapping=online:online,web:web,WEB:web,vue:mobcli-vue
#持续集成相关文件,如果有多个用","隔开
continuous.intergration.file=.gitlab-ci.yml,ci
#新增应用拷贝ingore文件
continuous.ignore=ignore
#新增应用时直接复制持续集成项目,如果有多个用","隔开
continuous.except=mobcli-vue

###########    minio config   ##############
##测试是minioadmin,生产是Minio  JCJG1234!
minio.accessKey=minioadmin
minio.secretKey=minioadmin
#生产
#minio.accessKey=Minio
#minio.secretKey=JCJG1234!

###########    cron config  ##################
###定时清理超时的pipeline，每分钟定时执行一次
clear.pipeline.cron=0 */1 * * * ?