<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gotest.dao.PlanListMapper">
    <resultMap id="BaseResultMap" type="com.gotest.domain.PlanList">
        <id column="plan_id" jdbcType="INTEGER" property="planId"/>
        <result column="work_no" jdbcType="VARCHAR" property="workNo"/>
        <result column="plan_name" jdbcType="VARCHAR" property="planName"/>
        <result column="plan_start_date" jdbcType="DATE" property="planStartDate"/>
        <result column="plan_end_date" jdbcType="DATE" property="planEndDate"/>
        <result column="device_info" jdbcType="VARCHAR" property="deviceInfo"/>
        <result column="field2" jdbcType="VARCHAR" property="field2"/>
        <result column="field3" jdbcType="VARCHAR" property="field3"/>
        <result column="field4" jdbcType="VARCHAR" property="field4"/>
        <result column="field5" jdbcType="VARCHAR" property="field5"/>
        <result column="testers" jdbcType="VARCHAR" property="testers"/>
        <result column="work_unit" jdbcType="VARCHAR" property="unitNo"/>
    </resultMap>

    <sql id = "PlanList_Column_List" >
        plan_id,
        work_no,
        plan_name,
        plan_start_date,
        plan_end_date,
        device_info,
        field2,
        field3,
        field4,
        field5,
        value
    </sql>

    <delete id="deleteByPlanId" parameterType="java.lang.Integer">
        delete from plan_list
        where plan_id = #{planId}
    </delete>
    <insert id="insert" parameterType="com.gotest.domain.PlanList">
        insert into plan_list (plan_id, work_no, plan_name,
        plan_start_date, plan_end_date, device_info,
        field2, field3, field4,
        field5)
        values (#{planId,jdbcType=INTEGER}, #{workNo,jdbcType=VARCHAR}, #{planName,jdbcType=VARCHAR},
        #{planStartDate,jdbcType=DATE}, #{planEndDate,jdbcType=DATE}, #{deviceInfo,jdbcType=VARCHAR},
        #{field2,jdbcType=VARCHAR}, #{field3,jdbcType=VARCHAR}, #{field4,jdbcType=VARCHAR},
        #{field5,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.gotest.domain.PlanList">
        update plan_list
        set work_no = #{workNo,jdbcType=VARCHAR},
        plan_name = #{planName,jdbcType=VARCHAR},
        plan_start_date = #{planStartDate,jdbcType=DATE},
        plan_end_date = #{planEndDate,jdbcType=DATE},
        device_info = #{deviceInfo,jdbcType=VARCHAR},
        field2 = #{field2,jdbcType=VARCHAR},
        field3 = #{field3,jdbcType=VARCHAR},
        field4 = #{field4,jdbcType=VARCHAR},
        field5 = #{field5,jdbcType=VARCHAR}
        where plan_id = #{planId,jdbcType=INTEGER}
    </update>

    <select id="selectByPlanId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
        p.plan_id ,
        p.work_no ,
        p.plan_name ,
        p.plan_start_date ,
        p.plan_end_date ,
        p.device_info ,
        w.work_unit,
        w.testers
        FROM plan_list p
        left join
        work_order w
        on
        w.work_no=p.work_no
        where plan_id = #{planId}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select <include refid="PlanList_Column_List" />
        from plan_list
    </select>
    <!-- 查询符合条件的总数-->
    <select id="selectByWorkNoByPlanNameCount" parameterType="java.lang.String" resultType="INTEGER">
        SELECT COUNT(1)
        FROM plan_list
        WHERE 1=1
        <if test="workNo != null">
            AND work_no = #{workNo}
        </if>
        <if test="planName !=null">
            AND
            plan_name = #{planName}
        </if>

    </select>
    <!-- 根据工单编号查询当前工单下的计划-->
    <select id="queryByworkNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select plan_id, work_no, plan_name, plan_start_date, plan_end_date, device_info, field2,
        field3, field4, field5
        from plan_list
        where work_no = #{workNo}
    </select>
    
        <!-- 根据工单编号查询当前工单下的计划-->
    <select id="isTestcaseAddIssue" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT 
        RESULT_STATUS 
        FROM FTMS_PLAN_RESULT 
        where ID = #{planlist_testcase_id};
    </select>

    <update id="updateWorkNoByPlanId">
        UPDATE
            plan_list
        SET
            work_no = #{workNo}
        WHERE
            plan_id = #{planId}
    </update>

    <update id="updatePlanNameByPlanId">
        UPDATE
            plan_list
        SET
            plan_name = #{planName}
        WHERE
            plan_id = #{planId}
    </update>

    <update id="updateWorkNoByWorkNos">
        UPDATE
            plan_list
        SET
            work_no = #{workNo}
        WHERE
            work_no in
        <foreach collection="workNos" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="queryTestcaseByPlanId" resultType="java.util.Map">
        select
        t.testcase_no,
        t.testcase_name,
        t.testcase_priority,
        f.RESULT_STATUS as testcaseStatus ,
        t.testcase_nature,
        t.testcase_type
        from FTMS_PLAN_RESULT f
        left join testcase t
        on f.TESTCASE_ID=t.testcase_no
        where f.PLAN_ID=#{planId}
        <if test="page_size != 0">
            limit #{start_page},#{page_size}
        </if>
    </select>

    <select id="queryPlanByworkNo" resultMap="BaseResultMap">
        select plan_id, work_no, plan_name, plan_start_date, plan_end_date, device_info, field2,
        field3, field4, field5
        from plan_list
        WHERE
        WORK_NO = #{workOrderNo}
        <if test="page_size != 0">
            limit #{start_page},#{page_size}
        </if>
    </select>

 <select id="queryPlanByUnitNo" resultMap="BaseResultMap">
    select
    p.plan_name ,
    p.plan_id  ,
    p.device_info ,
    p.plan_start_date ,
    p.plan_end_date ,
    k.testers,
    k.work_unit
    from plan_list p
    right join
    (select * from work_order
    where work_stage!=11 and work_unit in (${unitNo})) k
    on k.work_no=p.work_no
    where p.plan_id is not null
    <if test="page_size != 0">
        limit #{start_page},#{page_size}
    </if>
</select>

    <select id="queryPlanCountByUnitNo" parameterType="String" resultType="java.lang.Integer">
        select
        count(1) as total
        from plan_list p
        right join
        (select * from work_order
        where work_stage!=11 and work_unit in (${unitNo})) k
        on k.work_no=p.work_no
        where p.plan_id is not null
    </select>

</mapper>