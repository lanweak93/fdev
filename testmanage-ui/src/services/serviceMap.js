export default {
  tcase: {
    queryRelativePeople: '/tcase/testcase/queryRelativePeople', //根据工单号查询所有相关联系人和计划信息
    batchExecuteTestcase: '/tcase/testcase/batchExecuteTestcase', //批量执行案例
    queryTestcaseByStatusAndUserEnName:
      '/tcase/testcase/queryTestcaseByStatusAndUserEnName',
    updateToDiscardCase: '/tcase/testcase/updateToDiscardCase',
    updateToGeneralCase: '/tcase/testcase/updateToGeneralCase',
    repeatedTestcaseForPlans: '/tcase/testcase/repeatedTestcaseForPlans',
    agreeEffect: '/tcase/testcase/agreeEffect',
    rejectEffect: '/tcase/testcase/rejectEffect',
    agreeThrough: '/tcase/testcase/agreeThrough',
    rejectThrough: '/tcase/testcase/rejectThrough',
    queryTestcaseByOption: '/tcase/testcase/queryTestcaseByOption',
    countTestcase: 'tcase/testcase/countTestcase',
    queryTestcaseByFuncId: '/tcase/testcase/queryTestcaseByFuncId',
    exportCase: '/tcase/testcase/exportCase',
    countTestcaseByFuncId: '/tcase/testcase/countTestcaseByFuncId',
    changeNecessary: '/tcase/testcase/changeNecessary',
    queryUserApprovalList: '/tcase/testcase/queryUserApprovalList',
    queryTaskNameTestersByNo: '/tcase/testcase/queryTaskNameTestersByNo',
    QueryDetailByTestcaseNo: '/tcase/testcase/queryDetailByTestcaseNo',
    QueryTestCount: '/tcase/testcase/queryTestCount',
    AddTestcase: '/tcase/testcase/addTestcase',
    UpdateTestcaseByTestcaseNo: '/tcase/testcase/updateTestcaseByTestcaseNo',
    CopyTestcaseToOtherPlan: '/tcase/testcase/copyTestcaseToOtherPlan',
    UpdateTestcaseByStatusWaitPass:
      '/tcase/testcase/updateTestcaseByStatusWaitPass',
    UpdateTestcaseByStatusWaitEffect:
      '/tcase/testcase/updateTestcaseByStatusWaitEffect',
    DeleteTestcaseByTestcaseNo: '/tcase/testcase/deleteTestcaseByTestcaseNo',
    QueryTestcaseByPlanId: '/tcase/testcase/queryTestcaseByPlanId',
    queryPlanAllStatus: '/tcase/testcase/queryAllStatus',
    ASPQueryTestCase: '/tcase/testcase/selTestCaseCondition',
    delBatchRelationCase: '/tcase/testcase/delBatchRelationCase',
    batchCommitAudit: '/tcase/testcase/batchCommitAudit',
    batchEffectAudit: '/tcase/testcase/batchEffectAudit',
    batchCopyTestcaseToOtherPlan:
      '/tcase/testcase/batchCopyTestcaseToOtherPlan',
    batchRepeatedRelation: '/tcase/testcase/batchRepeatedRelation',
    exportExcelTestcase: '/tcase/testcase/exportExcelTestcase',
    queryAllTestcaseByPlanId: '/tcase/testcase/queryAllTestcaseByPlanId',
    downloadTemplate: '/tcase/batch/downloadTemplate',
    batchAdd: '/tcase/batch/batchAdd',
    queryByPlanIdAll: '/tcase/testcase/queryByPlanIdAll',
    testCaseDetailByTestcaseNoAndplanId:
      '/tcase/testcase/testCaseDetailByTestcaseNoAndplanId',
    updatePlanlistTestcaseRelation:
      '/tcase/testcase/updatePlanlistTestcaseRelation',
    sendCaseEmail: 'tcase/testcase/sendCaseEmail',
    testCaseCustomSort: '/tcase/testcase/testCaseCustomSort',
    queryAllReportImpl: '/tcase/report/weekReport',
    exportExcelWeekReport: '/tcase/report/exportExcelWeekReport',
    exportAllExcelWeekReport: '/tcase/report/exportExcelWeekReportAll',
    queryPersonReportImpl: '/tcase/report/personReport',
    testTeamBiweekly: '/tcase/report/testTeamBiweekly',
    listOfDevelopDefects: '/tcase/report/listOfDevelopDefects',
    defectClassify: '/tcase/report/defectClassify',
    teamDefectClassify: '/tcase/report/teamDefectClassify',
    queryPlanIdByPlanlistTestcaseId:
      '/tcase/testcase/queryPlanIdByPlanlistTestcaseId'
  },
  tadmin: {
    queryAllSystem: '/tadmin/api/systemModel/queryAllSystem',
    queryFuncMenuBySysId: '/tadmin/api/functionMenu/queryFuncMenuBySysId',
    updateFunctionMenu: '/tadmin/api/functionMenu/updateFunctionMenu',
    addFunctionMenu: '/tadmin/api/functionMenu/addFunctionMenu',
    listAll: '/tadmin/api/systemModel/listAll',
    queryBySysId: '/tadmin/api/systemModel/queryBySysId',
    queryMenuBySysIdAndLever:
      '/tadmin/api/functionMenu/queryMenuBySysIdAndLever',
    queryMenuVOListByLever: '/tadmin/api/functionMenu/queryMenuVOListByLever',
    QueryAllSystem: '/tadmin/api/systemModel/queryAllSystem',
    delFunctionMenu: '/tadmin/api/functionMenu/delFunctionMenu'
  },
  torder: {
    queryLastTransFilePath: '/torder/inform/queryLastTransFilePath',
    queryFdevTaskDetail: '/torder/fdev/queryFdevTaskDetail ',
    querySplitOrderList: '/torder/order/querySplitOrderList',
    refuseTask: '/torder/rollback/refuseTask',
    queryWorkOrderName: '/torder/order/queryWorkOrderName',
    queryFdevTaskByWorkNo: '/torder/task/queryFdevTaskByWorkNo',
    splitWorkOrder: '/torder/order/splitWorkOrder',
    queryTasks: '/torder/task/queryTasks',
    queryMergeOrderList: '/torder/order/queryMergeOrderList', //查询同一实施单元下的工单列表
    mergeWorkOrder: '/torder/order/mergeWorkOrder', //合并工单
    verifyOrderName: '/torder/order/verifyOrderName',
    querySitMsgList: '/torder/inform/querySitMsgList',
    countSitMsgList: '/torder/inform/countSitMsgList',
    querySitMsgDetail: '/torder/inform/querySitMsgDetail',
    queryOrderByNo: '/torder/order/queryOrderByOrderNo ',
    queryMessageRecord: '/torder/inform/queryMessageRecord',
    queryMessageCountImpl: '/torder/inform/queryMessageRecordCount',
    queryMessageCount: '/torder/inform/queryMessageCount',
    workOrderRollback: '/torder/rollback/workOrderRollback',
    queryPlanOrderList: '/torder/order/queryPlanOrderList',
    queryAssignOrderImpl: '/torder/order/queryAdminAssignOrder',
    queryMyOrderImpl: '/torder/order/queryUserAllOrder',
    iWantToassignImpl: '/torder/order/orderGrab',
    queryTotalImpl: '/torder/order/orderCount',
    submitAddOrderFormImpl: '/torder/order/addOrder',
    submitOrderFormImpl: '/torder/order/assignOrder',
    updateOrderImpl: '/torder/order/updateOrder',
    queryHistoryOrderImpl: '/torder/order/queryHistoryOrder',
    queryHistoryCountImpl: '/torder/order/queryHistoryOrderCount',
    queryQueryOrderImpl: '/torder/order/queryOrder',
    queryQueryCountImpl: '/torder/order/queryOrderCount',
    queryTaskListImpl: '/torder/order/queryTaskList',
    queryTaskListCountImpl: '/torder/order/queryTaskListCount',
    queryMessageImpl: '/torder/inform/queryMessage',
    ignoreMessageImpl: '/torder/inform/ignoreMessage',
    ignoreAllMessageImpl: '/torder/inform/ignoreAllMessage',
    passAduit: '/torder/aduit/passAduit',
    refuseAduit: '/torder/aduit/refuseAduit',
    rollBackWorkOrder: '/torder/order/rollBackWorkOrder',
    queryAduitOrder: '/torder/aduit/queryAduitOrder',
    queryAduitOrderCount: '/torder/aduit/queryAduitOrderCount',
    queryWorkOrderStageList: '/torder/order/queryWorkOrderStageList',
    queryWorkOrderList: '/torder/order/queryWorkOrderList',
    queryWasteOrder: '/torder/order/queryWasteOrder',
    queryWasteOrderCount: '/torder/order/queryWasteOrderCount',
    queryUserValidOrder: '/torder/order/queryUserValidOrder',
    movePlanOrCase: '/torder/order/movePlanOrCase',
    sendStartUatMail: '/torder/inform/sendStartUatMail',
    selWork: '/torder/statement/queryOrderDimension',
    workPieData: '/torder/statement/queryWorkOrderStatus',
    workLineData: '/torder/statement/queryBarAduit',
    exportExcelReport: '/torder/statement/exportExcelReport',
    queryDayTotalReport: '/torder/statement/queryDayTotalReport',
    queryDayGroupReport: '/torder/statement/queryDayGroupReport',
    queryUpSitOrderCount: '/torder/statement/queryUpSitOrderCount',
    queryUpSitOrder: '/torder/statement/queryUpSitOrder',
    exportSitReportData: '/torder/statement/exportSitReportData',
    getCompletedWorkNoData: '/torder/statement/queryNewOrderDimension',
    exportExcelFinishedOrder: '/torder/statement/exportExcelFinishedOrder',
    queryRollbackReport: '/torder/rollback/queryRollbackReport',
    exportRollbackReport: '/torder/rollback/exportRollbackReport',
    exportDayGroupReport: '/torder/statement/exportDayGroupReport',
    queryGroupInfo: '/torder/statement/queryGroupInfo',
    queryOrderInfoByUser: '/torder/statement/queryOrderInfoByUser',
    exportPersonalDimensionReport:
      '/torder/statement/exportPersonalDimensionReport',
    sendSitDoneMail: '/torder/inform/sendSitDoneMail',
    queryRqrFilesByOrderNo: 'torder/order/queryRqrFilesByOrderNo',
    exportOrderDimension: '/torder/statement/exportOrderDimension',
    qualityList: '/torder/statement/tendencyChart',
    queryOrderByOrderNo: '/torder/order/queryOrderByOrderNo',
    exportUserAllOrder: '/torder/order/exportUserAllOrder',
    queryUatMailInfo: '/torder/inform/queryUatMailInfo',
    exportGroupStatement: '/torder/statement/exportGroupStatement',
    exportMantisStatement: '/torder/statement/exportMantisStatement',
    queryDiscountChart: '/torder/statement/queryDiscountChart',
    queryQualityReport: '/torder/statement/qualityReport',
    qualityReportNewUnit: '/torder/statement/qualityReportNewUnit',
    uploadDocFile: '/torder/doc/uploadDocFile', // 安全测试发送邮件上传文档
    queryOrderInfoByNo: '/torder/order/queryOrderInfoByNo', //据工单编号查询工单信息
    qualityReportExport: '/torder/statement/qualityReportExport', //导出质量报告
    qualityReportNewUnitExport: '/torder/statement/qualityReportNewUnitExport', //质量报表查询详情导出
    querySubmitTimelyAndMantis: '/torder/inform/querySubmitTimelyAndMantis' //查询指定时间段内每个时间节点内提测准时率、提测任
  },
  tuser: {
    queryAllUserImpl: '/tuser/user/queryAssignUsers',
    batchUpdateNotiftStatus: '/tuser/notify/batchUpdateNotiftStatus',
    queryAssignList: '/tuser/user/queryAlreadyAllocated',
    queryAllOption: '/tuser/user/queryAll',
    assignUpdate: '/tuser/user/distributionUpdate',
    queryDevelopGroup: '/tuser/group/queryDevelopGroup',
    queryAllGroup: '/fuser/api/group/query',
    Login: '/tuser/login',
    logout: '/tuser/logout',
    OauthGetToken: '/tuser/oauth/oauthGetToken',
    oauthGetAuthorization: '/tuser/oauth/oauthGetAuthorization',
    oauthLogin: '/tuser/oauth/oauthGetAuth',
    selectNameImpl: '/tuser/user/queryAllUser',
    queryAssessorList: '/tuser/user/queryAssessorList',
    queryDevelopList: '/tuser/user/queryDevelopList',
    query: '/tuser/user/query',
    countUser: '/tuser/user/countUser',
    deleteUser: '/tuser/user/delete',
    updateUser: '/tuser/user/update',
    addUser: '/tuser/user/add',
    selUser: '/tuser/group/query',
    countUserTestCaseByTime: '/tuser/testcase/countUserTestCaseByTime',
    queryUserByUserName: '/tuser/user/queryUserByUserName',
    saveMantisToken: '/tuser/user/saveMantisToken',
    queryAllRole: '/tuser/role/queryAllRole',
    exportUserList: '/tuser/user/exportUserList',
    queryMessageUser: '/tuser/notify/queryMessageUser',
    updateNotifyStatus: '/tuser/notify/updateNotifyStatus',
    queryAnnounce: '/tuser/notify/queryAnnounce',
    sendAnnounce: '/tuser/notify/sendAnnounce',
    queryUserDetail: '/tuser/user/queryUserDetail',
    queryGroupName: '/tuser/group/query',
    getGroupChartData: '/tuser/testcase/getGroupChartData',
    exportExcelUser: '/tuser/testcase/exportExcelUser',
    queryFdevGroups: '/tuser/group/queryFdevGroups',
    countCaseTestByGroup: '/tuser/testcase/countCaseTestByGroup',
    update: '/tuser/user/update'
  },
  tmantis: {
    query: '/tmantis/mantis/query',
    countIssue: '/tmantis/mantis/countIssue',
    queryIssueDetail: '/tmantis/mantis/queryIssueDetail',
    deleteMantis: '/tmantis/mantis/delete',
    update: '/tmantis/mantis/update',
    deleteFile: '/tmantis/file/deleteFile',
    addFile: '/tmantis/file/addFile',
    queryMantisInfo: '/tmantis/mantis/queryIssueDetail',
    exportMantisList: '/tmantis/mantis/exportMantisList',
    queryProIssues: '/tmantis/proIssue/queryProIssues',
    countProIssues: '/tmantis/proIssue/countProIssues',
    queryIssueByPlanResultId: '/tmantis/mantis/queryIssueByPlanResultId',
    auditMantis: '/tmantis/mantis/auditMantis', //审批
    checkAuditAuthority: '/tmantis/mantis/checkAuditAuthority', //是否可以审核
    queryAuditMantisInfo: '/tmantis/mantis/queryAuditMantisInfo' //查询待审核缺陷信息
  },
  ftask: {
    queryTaskDoc: '/ftask/api/task/queryDocDetail'
  },
  tplan: {
    add: '/tplan/mantis/add',
    queryMantisProjects: '/tplan/mantis/queryMantisProjects',
    isTestcaseAddIssue: '/tplan/mantis/isTestcaseAddIssue',
    delPlan: '/tplan/plan/delPlan',
    queryByworkNo: '/tplan/plan/queryByworkNo',
    queryByworkNoStatus: '/tplan/plan/queryPlanAllStatus',
    addPlan: '/tplan/plan/addPlan',
    updateByPrimaryKey: '/tplan/plan/updateByPrimaryKey',
    selectByWorkNoByPlanNameCount: '/tplan/plan/selectByWorkNoByPlanNameCount',
    queryAppByWorkNo: '/tplan/mantis/queryAppByWorkNo'
  },
  fuser: {
    queryFdevUser: '/fuser/api/user/query',
    queryFdevGroup: '/fuser/api/group/query',
    queryGroup: '/fuser/api/group/queryGroup',
    queryUserCoreData: '/fuser/api/user/queryUserCoreData',
    queryRole: '/fuser/api/role/query',
    queryUser: '/fuser/api/user/queryUser'
  },
  fdocmanage: {
    preview: '/fdocmanage/api/wps/volumes/files/preview',
    exportExcelData: '/fdocmanage/api/file/filesDownload'
  },
  fapp: {
    queryApps: 'fapp/api/app/queryApps'
  },
  tauto: {
    queryMenu: '/tauto/menu/queryMenu',
    addMenu: '/tauto/menu/addMenu',
    deleteMenu: '/tauto/menu/deleteMenu',
    updateMenu: '/tauto/menu/updateMenu',
    addCase: '/tauto/case/addCase',
    queryCase: '/tauto/case/queryCase',
    deleteCase: '/tauto/case/deleteCase',
    updateCase: '/tauto/case/updateCase',
    genFile: '/tauto/autotest/genFile',
    excuteCase: '/tauto/autotest/excuteCase',
    addCaseDetail: '/tauto/casedetail/addCaseDetail',
    queryCaseDetail: '/tauto/casedetail/queryCaseDetail',
    deleteCaseDetail: '/tauto/casedetail/deleteCaseDetail',
    updateCaseDetail: '/tauto/casedetail/updateCaseDetail',
    addData: '/tauto/data/addData',
    deleteData: '/tauto/data/deleteData',
    updateData: '/tauto/data/updateData',
    queryData: '/tauto/data/queryData',
    addAssert: '/tauto/assert/addAssert',
    deleteAssert: '/tauto/assert/deleteAssert',
    updateAssert: '/tauto/assert/updateAssert',
    queryAssert: '/tauto/assert/queryAssert',
    addModule: '/tauto/module/addModule',
    deleteModule: '/tauto/module/deleteModule',
    updateModule: '/tauto/module/updateModule',
    queryModule: '/tauto/module/queryModule',
    addUser: '/tauto/user/addUser',
    deleteUser: '/tauto/user/deleteUser',
    updateUser: '/tauto/user/updateUser',
    queryUser: '/tauto/user/queryUser',
    addElementDic: '/tauto/elementdic/addElementDic',
    deleteElementDic: '/tauto/elementdic/deleteElementDic',
    updateElementDic: '/tauto/elementdic/updateElementDic',
    queryElementDic: '/tauto/elementdic/queryElementDic',
    addElement: '/tauto/element/addElement',
    deleteElement: '/tauto/element/deleteElement',
    updateElement: '/tauto/element/updateElement',
    queryElement: '/tauto/element/queryElement',
    addModuleDetail: '/tauto/moduledetail/addModuleDetail',
    deleteModuleDetail: '/tauto/moduledetail/deleteModuleDetail',
    updateModuleDetail: '/tauto/moduledetail/updateModuleDetail',
    queryModuleDetail: '/tauto/moduledetail/queryModuleDetail',
    queryCaseDetailByTestCaseNo:
      '/tauto/casedetail/queryCaseDetailByTestCaseNo',
    queryModuleDetailByModuleId:
      '/tauto/moduledetail/queryModuleDetailByModuleId',
    queryDataByTestCaseNo: '/tauto/data/queryDataByTestCaseNo',
    queryAssertByTestCaseNo: '/tauto/assert/queryAssertByTestCaseNo',
    queryDataByModuleId: '/tauto/data/queryDataByModuleId'
  }
};
